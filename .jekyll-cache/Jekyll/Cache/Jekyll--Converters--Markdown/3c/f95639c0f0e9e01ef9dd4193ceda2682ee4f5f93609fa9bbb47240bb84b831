I"<table onclick="window.open('https://www.acmicpc.net/problem/2667','','')" style="cursor:pointer;" border="1">
<thead>
  <tr>
    <td><img src="http://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/images/big-square.png" alt="Image" width="200" height="150" /></td>
    <td bgcolor="#9aff99"># 백준 2667번 토마토 문제 링크 <br />철수의 토마토 농장에서는 토마토를 보관하는 큰 창고를 가지고 있다. 토마토는 아래의 그림과 같이 격자모양 상자의 칸에 하나씩 넣은 다음,상자들을 수직으로 쌓아 올려서 창고에 보관한다.<br />www.acmicpc.net</td>
  </tr>
</thead>
</table>

<p><a href="https://www.acmicpc.net/problem/2667">백준 2667번 단지번호붙이기 문제링크</a></p>

<p><img src="https://user-images.githubusercontent.com/77001421/177326030-8df23f04-b17e-4b37-abe6-06255c025044.png" alt="백준 2667번 문제" width="1000" height="1000" /></p>

<h1 id="문제해설-이-문제는-카테고리를-분류해보면-전염성-문제와-유사하다고-볼-수있다-따라서-dfs를-사용하여-주변에-집이있는곳을-파악하고-가구수를-리스트에-저장한-후-출력하면-되는-문제이다">문제해설: 이 문제는 카테고리를 분류해보면 전염성 문제와 유사하다고 볼 수있다 따라서 DFS를 사용하여 주변에 집이있는곳을 파악하고 가구수를 리스트에 저장한 후 출력하면 되는 문제이다</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span><span class="o">=</span><span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="n">graph</span><span class="o">=</span><span class="p">[]</span><span class="c1">#맵의 정보를 저장하기위한 리스트
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span><span class="c1">#정보저장
</span>    <span class="n">graph</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="nb">list</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span><span class="nb">input</span><span class="p">())))</span>

<span class="k">def</span> <span class="nf">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">):</span> <span class="c1">#DFS정의
</span>    <span class="k">if</span> <span class="n">x</span><span class="o">&gt;=</span><span class="n">N</span> <span class="ow">or</span> <span class="n">x</span><span class="o">&lt;</span><span class="mi">0</span> <span class="ow">or</span> <span class="n">y</span><span class="o">&gt;=</span><span class="n">N</span> <span class="ow">or</span> <span class="n">y</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">False</span>
    <span class="k">if</span> <span class="n">graph</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">:</span><span class="c1">#1 즉 집을 만날때 집의 수를 센후 그 자리의 집을 지운다
</span>        <span class="n">graph</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span>
        <span class="k">global</span> <span class="n">count</span>
        <span class="n">count</span><span class="o">+=</span><span class="mi">1</span>
        <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
        <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">True</span>
    <span class="k">return</span> <span class="bp">False</span>
<span class="n">total</span><span class="o">=</span><span class="mi">0</span>
<span class="n">result</span><span class="o">=</span><span class="p">[]</span> 
<span class="n">count</span><span class="o">=</span><span class="mi">0</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>  
    <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="p">,</span><span class="n">j</span><span class="p">)</span><span class="o">==</span><span class="bp">True</span><span class="p">:</span>
            <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
            <span class="n">total</span><span class="o">+=</span><span class="mi">1</span>
            <span class="n">count</span><span class="o">=</span><span class="mi">0</span>
<span class="k">print</span><span class="p">(</span><span class="n">total</span><span class="p">)</span><span class="c1">#집의 집단수 출력 
</span><span class="n">result</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span><span class="c1">#집의수가 적은단위부터 출력하기 위한 정렬 
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span><span class="c1">#집단속 집의 숫자 출력 
</span>    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

</code></pre></div></div>
:ET